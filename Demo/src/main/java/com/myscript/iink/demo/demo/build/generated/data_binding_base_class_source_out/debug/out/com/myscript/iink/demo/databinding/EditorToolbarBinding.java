// Generated by view binder compiler. Do not edit!
package com.myscript.iink.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.myscript.iink.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditorToolbarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton editorClearContent;

  @NonNull
  public final ImageButton editorRedo;

  @NonNull
  public final ImageButton editorUndo;

  @NonNull
  public final LinearLayout partEditorControls;

  @NonNull
  public final SwitchCompat switchActivePen;

  private EditorToolbarBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton editorClearContent, @NonNull ImageButton editorRedo,
      @NonNull ImageButton editorUndo, @NonNull LinearLayout partEditorControls,
      @NonNull SwitchCompat switchActivePen) {
    this.rootView = rootView;
    this.editorClearContent = editorClearContent;
    this.editorRedo = editorRedo;
    this.editorUndo = editorUndo;
    this.partEditorControls = partEditorControls;
    this.switchActivePen = switchActivePen;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditorToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditorToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.editor_toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditorToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editor_clear_content;
      ImageButton editorClearContent = ViewBindings.findChildViewById(rootView, id);
      if (editorClearContent == null) {
        break missingId;
      }

      id = R.id.editor_redo;
      ImageButton editorRedo = ViewBindings.findChildViewById(rootView, id);
      if (editorRedo == null) {
        break missingId;
      }

      id = R.id.editor_undo;
      ImageButton editorUndo = ViewBindings.findChildViewById(rootView, id);
      if (editorUndo == null) {
        break missingId;
      }

      LinearLayout partEditorControls = (LinearLayout) rootView;

      id = R.id.switch_active_pen;
      SwitchCompat switchActivePen = ViewBindings.findChildViewById(rootView, id);
      if (switchActivePen == null) {
        break missingId;
      }

      return new EditorToolbarBinding((LinearLayout) rootView, editorClearContent, editorRedo,
          editorUndo, partEditorControls, switchActivePen);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
